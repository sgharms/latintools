<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby 

module MacronConversions
  LATEX_TO_MACRONS_CHARACTERS = {
    "\\={a}"   =&gt; "ā",
    "\\={e}"   =&gt; "ē",
    "\\={\\i}" =&gt; "ī",
    "\\={o}"   =&gt; "ō",
    "\\={u}"   =&gt; "ū",
    "\\={y}"   =&gt; "ȳ",
    "\\={A}"   =&gt; "Ā",
    "\\={E}"   =&gt; "Ē",
    "\\={I}"   =&gt; "Ī",
    "\\={O}"   =&gt; "Ō",
    "\\={U}"   =&gt; "Ū",
  }
  
  LATEX_TO_UTF8 ={
    "\\={a}"   =&gt; "\\xc4\\x81",
    "\\={e}"   =&gt; "\\xc4\\x93",
    "\\={\\i}" =&gt; "\\xc4\\xab",
    "\\={o}"   =&gt; "\\xc5\\x8d",
    "\\={u}"   =&gt; "\\xc5\\xab",
    "\\={y}"   =&gt; "\\xC8\\xB3 ",
    "\\={A}"   =&gt; "\\xc4\\x80",
    "\\={E}"   =&gt; "\\xc4\\x92",
    "\\={I}" =&gt; "\\xc4\\xaa",
    "\\={O}"   =&gt; "\\xc5\\x8c",
    "\\={U}"   =&gt; "\\xc5\\xaa",
  }
  
  LATEX_TO_HTML_ENTITIES = {
    "\\={a}"   =&gt; "&amp;#x101;",
    "\\={e}"   =&gt; "&amp;#x113;",
    "\\={\\i}" =&gt; "&amp;#x12b;",
    "\\={o}"   =&gt; "&amp;#x14d;",
    "\\={u}"   =&gt; "&amp;#x16b;",
    "\\={y}"   =&gt; "&amp;#x233;",
    "\\={A}"   =&gt; "&amp;#x100;",
    "\\={E}"   =&gt; "&amp;#x112;",
    "\\={I}" =&gt; "&amp;#x12a;",
    "\\={O}"   =&gt; "&amp;#x14c;",
    "\\={U}"   =&gt; "&amp;#x16a;",
  }

  class Converter &lt; Object
    def initialize(*ray)
      @target = ray[0].nil? ? 'html' : ray[0]
      @index=Array.new
    end
    
    def processString(s)      
      firstSlash = s =~ /(\\=.*?\})/
      return s if $1.nil?
      
      testChar = $1
       
      if firstSlash == 0
        return processChar(testChar) +
         processString(s[firstSlash+testChar.length..s.length])
      end
      
      return s[0..firstSlash-1] + processChar(testChar) +
       processString(s[firstSlash+testChar.length..s.length])
    end
    
    def processChar(c)
      LATEX_TO_HTML_ENTITIES[c]
    end
  end
end

unless STDIN.tty?
  content=STDIN.read
else
  content=ARGV[0]
end

puts MacronConversions::Converter.new().processString(content)
</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Latex Macrons to HTML Entities</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>uuid</key>
	<string>1C2E22E3-E416-4C39-9853-608A3AB2B296</string>
</dict>
</plist>
